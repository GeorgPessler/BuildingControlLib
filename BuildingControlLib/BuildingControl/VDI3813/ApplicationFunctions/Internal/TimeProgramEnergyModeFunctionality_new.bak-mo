within BuildingControlLib.BuildingControl.VDI3813.ApplicationFunctions.Internal;
block TimeProgramEnergyModeFunctionality_new
  "Time program functionality based on Modelica.Blocks.TimeTable"

      extends
    BuildingControlLib.BuildingControl.VDI3813.Interfaces.Partial.PartialFunctionality;

  /***   ***   ***   ***   ***   ***   ***   ***   ***   ***/
  // Connector
  Interfaces.Time.ValueCurrentTimeAndDateInput D_ACT
    "Input connector of ValueCurrentTimeAndDate"
    annotation (Placement(transformation(extent={{-100,20},{-60,60}})));
  Interfaces.EnergyMode.CommandEnergyModeTimeScheduleOutput M_BMS
    "Output connector of CommandEnergyModeTimeSchedule"
                                                      annotation (
      Placement(transformation(extent={{100,20},{140,60}}), iconTransformation(
          extent={{100,20},{140,60}})));
  parameter Real startTime[1,5] = {{0,0,0,0,-1.0}}
    "Array with start time and value format: {{days,hours,minutes,seconds,startValue}}";

  parameter Real PAR_WSCH[:,5] = {
            {1,8,0,0,-1.0},
            {1,8,0,0,1.5},
            {1,18,0,0,1.5},
            {1,18,0,0,-1.0},
            {2,8,0,0,-1.0},
            {2,8,0,0,1.5},
            {2,18,0,0,1.5},
            {2,18,0,0,-1.0},
            {3,8,0,0,-1.0},
            {3,8,0,0,1.5},
            {3,18,0,0,1.5},
            {3,18,0,0,-1.0},
            {4,8,0,0,-1.0},
            {4,8,0,0,1.5},
            {4,18,0,0,1.5},
            {4,18,0,0,-1.0},
            {5,8,0,0,-1.0},
            {5,8,0,0,1.5},
            {5,18,0,0,1.5},
            {5,18,0,0,-1.0},
            weeklySchedule.endValue}
    "Time/value pairs of weekly schedule in regular operation. Format: {{days,hours,minutes,seconds,value}}. Need to leave endValue parameter as last item. Discontinuities allowed by introducing values in table twice ";

      parameter Real PAR_ESCH[:,5] = {
            {1,8,0,0,-1.0},
            {1,8,0,0,1.5},
            {1,10,0,0,1.5},
            {1,10,0,0,-1.0},
            exceptionSchedule.endValue}
    "Time/value pairs of exception schedule. Format: {{days,hours,minutes,seconds,value}}. Need to leave endValue parameter as last item. Discontinuities allowed by introducing values in table twice ";

      parameter Real PAR_CAL[:,5] = {
            {126,0,0,0,-1.0},
            {126,0,0,0,1.0},
            {127,0,0,0,1.0},
            {127,10,0,0,-1.0},
            exceptionCalendar.endValue}
    "Time/value pairs of of yearly execption calendar. Format: {{days,hours,minutes,seconds,value}}. Need to leave endValue parameter as last item. Discontinuities allowed by introducing values in table twice ";

  Nonstandardized.ScheduleWeekly weeklySchedule(
    startTime = startTime,
    inputIntervalsAndValue = PAR_WSCH)
    annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));

  Nonstandardized.ScheduleDaily  exceptionSchedule(
    startTime = startTime,
    inputIntervalsAndValue = PAR_ESCH)
    annotation (Placement(transformation(extent={{-80,-80},{-60,-60}})));

  Nonstandardized.ScheduleYearly exceptionCalendar(
      startTime = startTime,
      startTime = startTime,
      inputIntervalsAndValue = PAR_CAL)
    annotation (Placement(transformation(extent={{-80,-50},{-60,-30}})));

  Modelica.Blocks.Math.RealToInteger realToInteger
    annotation (Placement(transformation(extent={{40,-60},{60,-40}})));
  Modelica.Blocks.Logical.GreaterThreshold greaterThreshold(threshold=-1)
    annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
  Modelica.Blocks.Logical.Switch switch1
    annotation (Placement(transformation(extent={{0,-60},{20,-40}})));

  Sources.EnergyMode.PrescribedM_BMS prescribedM_BMS annotation (Placement(
        transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={90,-10})));
  annotation (experiment(StopTime=1.2096e+006, Interval=1000),
      __Dymola_experimentSetupOutput,
    Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
            100}}), graphics));

equation
  connect(greaterThreshold.y, switch1.u2) annotation (Line(
      points={{-19,-50},{-2,-50}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(exceptionSchedule.y, switch1.u3) annotation (Line(
      points={{-59,-70},{-10,-70},{-10,-58},{-2,-58}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(switch1.u1, weeklySchedule.y) annotation (Line(
      points={{-2,-42},{-12,-42},{-12,-10},{-59,-10}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(switch1.y, realToInteger.u) annotation (Line(
      points={{21,-50},{38,-50}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(prescribedM_BMS.M_BMS, M_BMS) annotation (Line(
      points={{94,1.9},{85.95,1.9},{85.95,40},{120,40}},
      color={0,0,0},
      thickness=1,
      smooth=Smooth.None));
  connect(realToInteger.y, prescribedM_BMS.u) annotation (Line(
      points={{61,-50},{70,-50},{70,-50},{86,-50},{86,-18},{86,-18}},
      color={255,127,0},
      smooth=Smooth.None));
  connect(exceptionCalendar.y, greaterThreshold.u) annotation (Line(
      points={{-59,-40},{-52,-40},{-52,-50},{-42,-50}},
      color={0,0,127},
      smooth=Smooth.None));
end TimeProgramEnergyModeFunctionality_new;
