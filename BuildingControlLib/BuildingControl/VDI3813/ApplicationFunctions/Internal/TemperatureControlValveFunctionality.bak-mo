within BuildingControlLib.BuildingControl.VDI3813.ApplicationFunctions.Internal;
block TemperatureControlValveFunctionality
  "Functionality implemeting behaviour of Temperature Control for Valves"

  extends
    BuildingControlLib.BuildingControl.VDI3813.Interfaces.Partial.PartialFunctionality;
  /***   ***   ***   ***   ***   ***   ***   ***   ***   ***/
  // Connectors
   Interfaces.AirTemperature.ValueAirTemperatureRoomInput T_ROOM
    annotation (Placement(transformation(extent={{-100,0},{-60,20}})));
  Interfaces.AirTemperature.SetpointHeatCoolEnergyModesInput T_SETPS
    annotation (Placement(transformation(extent={{-100,-20},{-56,0}})));
  Interfaces.ControlFunction.ValueControlFunctionAirTemperatureCurrentlyInput
    F_ACT annotation (Placement(transformation(extent={{-100,40},{-60,60}})));
  Interfaces.EnergyMode.ValueEnergyModeCurrentlyInput M_ACT
    annotation (Placement(transformation(extent={{-100,20},{-60,40}})));
  Interfaces.ActuatorSignal.CommandActuatorSignalValvePositionOutput V_SET_VP
    annotation (Placement(transformation(extent={{100,20},{140,60}})));
  Interfaces.ActuatorSignal.StatusActuatorSignalValvePositionInput V_STA_VP
    annotation (Placement(transformation(extent={{-100,-40},{-58,-20}})));
  Interfaces.ActuatorSignal.SetpointActuatorSignalLockValvePositionOutput V_LCK
    annotation (Placement(transformation(extent={{100,-20},{140,20}})));

  /***   ***   ***   ***   ***   ***   ***   ***   ***   ***/
  // Parameter
  parameter Boolean PAR_CTL = true "Parameter specifying if controller is used
   for heating (==true) or cooling (== false)";

  /***   ***   ***   ***   ***   ***   ***   ***   ***   ***/
  // Components
  Sensors.SensorT_SETPTS sensorT_SETPTS
    annotation (Placement(transformation(extent={{-34,-14},{-14,6}})));
  Sources.ActuatorSignal.PrescribedV_SET_VP prescribedV_SET_VP
    annotation (Placement(transformation(extent={{40,26},{60,46}})));
  Sensors.SensorT_ROOM sensorT_ROOM
    annotation (Placement(transformation(extent={{-34,6},{-14,26}})));
  Sources.ActuatorSignal.PrescribedV_LCK prescribedV_LCK
    annotation (Placement(transformation(extent={{48,-52},{68,-32}})));
  Modelica.Blocks.Sources.Constant dummyV_LCK(k=0)
    annotation (Placement(transformation(extent={{0,-70},{20,-50}})));
  Modelica.Blocks.Math.Add add(k2=-1)
    annotation (Placement(transformation(extent={{-36,70},{-28,78}})));
  Modelica.Blocks.Math.Gain gain(k=1)
    annotation (Placement(transformation(extent={{-12,68},{-2,78}})));
  Modelica.Blocks.Nonlinear.Limiter
                           limiter(                      strict=true, limitsAtInit=true,
    uMax=1,
    uMin=0)
    annotation (Placement(transformation(extent={{18,66},{38,86}},  rotation=
            0)));
algorithm

  if PAR_CTL then
    if M_ACT.valueEnergyModeCurrently == EM.protection then
      add.u2 :=  sensorT_SETPTS.y[1];
    elseif M_ACT.valueEnergyModeCurrently == EM.economy then
      add.u2 :=  sensorT_SETPTS.y[2];
    elseif M_ACT.valueEnergyModeCurrently == EM.precomfort then
      add.u2 :=  sensorT_SETPTS.y[3];
    elseif M_ACT.valueEnergyModeCurrently == EM.comfort then
      add.u2 :=  sensorT_SETPTS.y[4];
    end if;
  else
    if M_ACT.valueEnergyModeCurrently == EM.comfort then
      add.u2 :=  sensorT_SETPTS.y[5];
    elseif M_ACT.valueEnergyModeCurrently == EM.precomfort then
      add.u2 :=  sensorT_SETPTS.y[6];
    elseif M_ACT.valueEnergyModeCurrently == EM.economy then
      add.u2 :=  sensorT_SETPTS.y[7];
    elseif M_ACT.valueEnergyModeCurrently == EM.protection then
      add.u2 :=  sensorT_SETPTS.y[8];
    end if;
  end if;

equation
  /***   ***   ***   ***   ***   ***   ***   ***   ***   ***/
  // Auto generated
  connect(sensorT_SETPTS.T_SETPTS, T_SETPS) annotation (Line(
      points={{-32,0},{-78,0},{-78,-10}},
      color={0,0,0},
      thickness=1,
      smooth=Smooth.None));
  connect(prescribedV_SET_VP.V_SET_VP, V_SET_VP) annotation (Line(
      points={{61.9,36},{100,36},{100,40},{120,40}},
      color={0,0,0},
      thickness=1,
      smooth=Smooth.None));
  connect(sensorT_ROOM.T_ROOM, T_ROOM) annotation (Line(
      points={{-32,21.2},{-80,21.2},{-80,10}},
      color={0,0,0},
      thickness=1,
      smooth=Smooth.None));
  connect(prescribedV_LCK.V_LCK, V_LCK) annotation (Line(
      points={{69.9,-42},{86,-42},{86,0},{120,0}},
      color={0,0,0},
      thickness=1,
      smooth=Smooth.None));
  connect(dummyV_LCK.y, prescribedV_LCK.u) annotation (Line(
      points={{21,-60},{36,-60},{36,-42},{50,-42}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(add.y, gain.u) annotation (Line(
      points={{-27.6,74},{-24,74},{-24,72},{-20,72},{-20,73},{-13,73}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(add.u1, sensorT_ROOM.y) annotation (Line(
      points={{-36.8,76.4},{-40,76.4},{-40,76},{-42,76},{-42,48},{-2,48},{-2,12},
          {-12,12}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(limiter.y, prescribedV_SET_VP.u) annotation (Line(
      points={{39,76},{40,76},{40,36},{42,36}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(gain.y, limiter.u) annotation (Line(
      points={{-1.5,73},{7.25,73},{7.25,76},{16,76}},
      color={0,0,127},
      smooth=Smooth.None));
  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
            -100,-100},{100,100}}), graphics), Diagram(coordinateSystem(
          preserveAspectRatio=false, extent={{-100,-100},{100,100}}),
        graphics));
end TemperatureControlValveFunctionality;
