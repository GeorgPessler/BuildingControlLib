within BuildingControlLib.BuildingControl.VDI3814.Examples;
model TestTimer
  Modelica.Blocks.Logical.Timer timer
    annotation (Placement(transformation(extent={{-10,20},{10,40}})));
  Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(threshold=
       10) annotation (Placement(transformation(extent={{40,20},{60,40}})));
  Modelica.Blocks.Logical.Not not1 annotation (Placement(transformation(
        extent={{-10,10},{10,-10}},
        rotation=180,
        origin={84,-54})));
  Modelica.Blocks.Logical.Or or1
    annotation (Placement(transformation(extent={{-60,20},{-40,40}})));
  Modelica.Blocks.Logical.Pre pre1(pre_u_start=false) annotation (Placement(
        transformation(
        extent={{-10,-10},{10,10}},
        rotation=180,
        origin={118,-50})));
  Modelica.Blocks.Logical.LogicalSwitch logicalSwitch
    annotation (Placement(transformation(extent={{-40,-40},{-60,-20}})));
  Modelica.Blocks.Sources.BooleanConstant const
    annotation (Placement(transformation(extent={{-2,-6},{-22,14}})));
  Modelica.Blocks.Sources.BooleanConstant const1(k=false)
    annotation (Placement(transformation(extent={{2,-76},{-18,-56}})));
  Modelica.Blocks.Sources.BooleanPulse booleanPulse(
    startTime=10,
    width=10,
    period=100)
    annotation (Placement(transformation(extent={{-100,20},{-80,40}})));
  Modelica.Blocks.Logical.GreaterThreshold      greaterEqualThreshold1
           annotation (Placement(transformation(extent={{40,-6},{60,14}})));
  Modelica.Blocks.Logical.Or or2
    annotation (Placement(transformation(extent={{-2,-38},{-22,-18}})));
equation
  connect(greaterEqualThreshold.u, timer.y) annotation (Line(
      points={{38,30},{11,30}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(or1.y, timer.u) annotation (Line(
      points={{-39,30},{-12,30}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(pre1.y, not1.u) annotation (Line(
      points={{107,-50},{104,-50},{104,-52},{100,-52},{100,-54},{96,-54}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(const.y, logicalSwitch.u1) annotation (Line(
      points={{-23,4},{-30,4},{-30,-22},{-38,-22}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(const1.y, logicalSwitch.u3) annotation (Line(
      points={{-19,-66},{-34,-66},{-34,-80},{-32,-80},{-32,-38},{-38,-38}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(or2.y, logicalSwitch.u2) annotation (Line(
      points={{-23,-28},{-24,-28},{-24,-30},{-38,-30}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(greaterEqualThreshold1.u, timer.y) annotation (Line(
      points={{38,4},{30,4},{30,30},{11,30}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(greaterEqualThreshold1.y, or2.u1) annotation (Line(
      points={{61,4},{68,4},{68,-28},{0,-28}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(greaterEqualThreshold.y, pre1.u) annotation (Line(
      points={{61,30},{90,30},{90,0},{134,0},{134,-50},{130,-50}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(not1.y, or2.u1) annotation (Line(
      points={{73,-54},{60,-54},{60,-50},{48,-50},{48,-28},{0,-28}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(logicalSwitch.y, or1.u2) annotation (Line(
      points={{-61,-30},{-74,-30},{-74,22},{-62,22}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(booleanPulse.y, or1.u1) annotation (Line(
      points={{-79,30},{-62,30}},
      color={255,0,255},
      smooth=Smooth.None));
  annotation (Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,
            -100},{100,100}}), graphics));
end TestTimer;
