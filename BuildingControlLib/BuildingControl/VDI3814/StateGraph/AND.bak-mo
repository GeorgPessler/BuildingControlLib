within BuildingControlLib.BuildingControl.VDI3814.StateGraph;
block AND "Logical and with multiple inputs and one output"
   extends Interfaces.PartialBinaryMISO(nu=nIn);
   /* ***   ***   ***   ***   ***   ***   ***   ***   ***  */
   // Parameters
  parameter Integer nIn(min=1) = 2 "Number of boolean inputs";
  /* ***   ***   ***   ***   ***   ***   ***   ***   ***  */
  // Components
  Modelica.Blocks.MathBoolean.And and1(nu=nIn)
    annotation (Placement(transformation(extent={{-8,-10},{12,10}})));
  Modelica.Blocks.Math.IntegerToBoolean integerToBoolean[nIn]
    annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));
  Modelica.Blocks.Math.BooleanToInteger booleanToInteger
    annotation (Placement(transformation(extent={{40,-10},{60,10}})));
equation
  for i in 1:nIn loop
    connect(integerToBoolean[i].y, and1.u[i]) annotation (Line(
      points={{-39,0},{-8,0}},
      color={255,0,255},
      smooth=Smooth.None));
    connect(integerToBoolean[i].u, u[i]) annotation (Line(
      points={{-62,0},{-100,0}},
      color={255,127,0},
      smooth=Smooth.None));
  end for;

  connect(booleanToInteger.u, and1.y) annotation (Line(
      points={{38,0},{13.5,0}},
      color={255,0,255},
      smooth=Smooth.None));
  connect(booleanToInteger.y, y) annotation (Line(
      points={{61,0},{115,0},{115,0}},
      color={255,127,0},
      smooth=Smooth.None));
  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
            {100,100}}), graphics={Rectangle(
          extent={{-100,100},{100,-100}},
          lineColor={0,0,0},
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid), Text(
          extent={{-36,52},{36,-48}},
          lineColor={0,0,0},
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid,
          textString="&")}), Diagram(coordinateSystem(preserveAspectRatio=false,
          extent={{-100,-100},{100,100}}), graphics));
end AND;
